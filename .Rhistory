excel.data <- read.xlsx("excell.xlsx", sheetIndex = 1)
csvdata <- read.csv("Desktop/ahaa.cvs",header=TRUE)
print(data2)
print(data1)
print(mydataframe)
output<-data.frame(mydataframe$id,mydataframe$name,mydataframe$Age,mydataframe$salary,mydataframe$Date_of_Reg)
cat(str(mydataframe))
print(df)
summary(df)
cat(summary(df))
df = data.frame(n, s, b)
b = c(TRUE, FALSE, TRUE)
output<-data.frame(df$s,df$b)
print(output)
output<-data.frame(df$s,df$b)
output<-data.frame(s,b)
output<-data.frame(df$s,df$b)
output<-data.frame(df$s,df$b)
print(emp.data)
print(result)
staff.data <- data.frame(staff_id,staff_name,salary,start_date)
sql=function(x) return (x*x)
print(output)
print(n)
)
output<-data.frame(df$s,df$b)
output<-df.data(df$s,df$b)
result <- data.
print(result)
# Create the data frame.
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01","2013-09-23","2014-11-15","2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
100:90
1:90
help.search(contourLines())
help.search("contourLines()")
contourLines(x = seq(0, 1, length.out = nrow(z)),
y = seq(0, 1, length.out = ncol(z)),
z, nlevels = 10,
levels = pretty(range(z, na.rm = TRUE), nlevels))
heatmap(as.matrix(mtcars),scale = "column",colv=NA,main="MY HEATMAP DEMO")
heatmap(as.matrix(mtcars),scale = "column",main="MY HEATMAP DEMO")
compl<-c(1+2i,8+9i)
mode(compl)
l<-c(1+2i,8+9i)
mode(l)
m<-c(1.234,899.90)
mode(m)
n<-c(1,2,3)
mode(compl)
p<-c("men","women")
mode(p)
l<-c(1+2i,8+9i)
mode(l)
m<-c(1.234,899.90)
mode(m)
n<-c(1,2,3)
mode(n)
p<-c("men","women")
mode(p)
l<-c(1+2i,8+9i)
mode(l)
m<-c(1.234,9.90)
mode(m)
n<-c(1,2,3)
mode(n)
p<-c("men","women")
mode(p)
s<-c(FALSE,TRUE)
mode(s)
x<-list(c("mangoes","oranges","sim sim"),c("matooke","posho","beans","gnuts"))
names(x)<-c("fruits","realfood")
i<-fruits[2]
i
mydata<-read.txt(file.choose(),header=TRUE)
mydata
mydata<-read.txt(file.choose(),header=FALSE)
map.text("World","Uganda")
require(corrplot)
data(mtcars)
m<-cor(mtcars)
corrplot(m,method="pie")
require("corrplot")
data(mtcars)
m<-cor(mtcars)
corrplot(m,method="pie")
require(corrplot)
data(mtcars)
m<-cor(mtcars)
corrplot(m,method="pie")
install.packages("corrplot")
require("map")
map.where("world",33,33)
dall=3
names(dall)<-c("john","joel","joshua")
atributes(dall)
dall=3
names(dall)<-c("john","joel","joshua")
atrributes(dall)
l<-c(1+2i,8+9i)
mode(l)
storage.mode(s)
m<-c(1.234,9.90)
mode(m)
storage.mode(s)
n<-c(1,2,3)
mode(n)
storage.mode(s)
p<-c("men","women")
mode(p)
storage.mode(s)
s<-c(FALSE,TRUE)
mode(s)
storage.mode(s)
l<-c(1+2i,8+9i)
mode(l)
storage.mode(l)
m<-c(1.234,9.90)
mode(m)
storage.mode(m)
n<-c(1,2,3)
mode(n)
storage.mode(n)
p<-c("men","women")
mode(p)
storage.mode(p)
s<-c(FALSE,TRUE)
mode(s)
storage.mode(s)
l<-c(1+2i,8+9i)
mode(l)
storage.mode(l)
m<-c(1.234,9.90)
mode(m)
storage.mode(m)
n<-c(1,2,3)
mode(n)
storage.mode(n)
p<-c("men","women")
mode(p)
storage.mode(p)
s<-c(FALSE,TRUE)
mode(s)
storage.mode(s)
mydata<-read.csv(file.choose(),header=TRUE)
val1<-mydata$English
val2<-mydata$Art
hist(val,main = "HISTOGRAM OF NUMBERS",xlab = "Height",col = "green")
abline(val1~val2)
boxplot(val)
barplot(val)
mydata<-read.csv(file.choose(),header=TRUE)
val1<-mydata$English
val2<-mydata$Art
hist(val,main = "HISTOGRAM OF NUMBERS",xlab = "Height",col = "green")
abline(val1~val2)
boxplot(val)
barplot(val)
obj<-v("James","Jell","keane")
attr(obj,"Salary")<-5000
obj
obj<-v("James","Jell","keane")
attr(obj,"Salary")<-5000
attributes(obj)
#matrix one
rownames=c("A","B")
colnames=c("C","D")
mymatrix1<-matrix(c(3:6),nrow=2,ncol=2,byrow=TRUE,dimnames = list(rownames,colnames))
mymatrix1
mytranspose<-t(mymatrix1)
mytranspose
#matrix two
rowname=c("E","F")
colname=c("G")
mymatrix2<-matrix(c(7:8),nrow=2,ncol=1,byrow=TRUE,dimnames = list(rowname,colname))
#bind two matrices using cbind[have same number of rows]
u<-cbind(mymatrix1,mymatrix2)
u
names<-c("Moses","Luis","James","Joan")
myf<-factor(names)
myf
names<-c("Moses","Luis","James","Joan")
myf<-factor(names)
myf
gender<-c("Male","Female")
f<-factor(names)
f
num<-c(67:60)
myfactor<-factor(num)
myfactor
names<-c("Moses","Luis","James","Joan")
myf<-factor(names)
myf
gender<-c("Male","Female")
f<-factor(names)
f
num<-c(67:60)
myfactor<-factor(num)
myfactor
gender<-c("Male","Female")
f<-factor(names)
f
mydata<-read.csv(file.choose(),header=TRUE)
val1<-mydata$English
val2<-mydata$Art
#hist(val,main = "HISTOGRAM OF NUMBERS",xlab = "Height",col = "green")
plot(val)
abline(lm(val1~val2))
mydata<-read.csv(file.choose(),header=TRUE)
plot(val)
abline(lm(mydata$English~Art))
mydata<-read.csv(file.choose(),header=TRUE)
plot(mydata)
abline(lm(mydata$English~Art))
abline(lm(mydata$English~mydata$Art))
mydata<-read.csv(file.choose(),header=TRUE)
plot(mydata)
abline(lm(mydata$English~mydata$Art))
#hist(val,main = "HISTOGRAM OF NUMBERS",xlab = "Height",col = "green")
#boxplot(val)
#barplot(val)
mydata<-read.csv(file.choose(),header=TRUE)
plot(mydata)
abline(lm(mydata$Name~mydata$Art))
#hist(val,main = "HISTOGRAM OF NUMBERS",xlab = "Height",col = "green")
#boxplot(val)
#barplot(val)
heatmap(mydata$English,main="My heatmap",Colv = NA)
heatmap(t,main="My heatmap",Colv = NA)
#boxplot(val)
#barplot(val)
t<-c(45,89,70,90,45,32,12,124)
heatmap(t,main="My heatmap",Colv = NA)
t<-c(45,89,70,90,45,32,12,124)
heatmap(t,main="My heatmap",Colv = NA)
#mydata<-read.csv(file.choose(),header=TRUE)
#plot(mydata)
#abline(lm(mydata$English~mydata$Art))
#hist(val,main = "HISTOGRAM OF NUMBERS",xlab = "Height",col = "green")
#boxplot(val)
#barplot(val)
t<-c(45,89,70,90,45,32,12,124)
heatmap(as.matrix(t),scale="column",main="My heatmap",Colv = NA)
t<-c(45,89,70,90)
m<-matrix(t,nrow=2,ncol = 2,byrow=TRUE)
heatmap(m,scale="column",main="My heatmap",Colv = NA)
t<-c(45,89,70,90)
m<-matrix(t,nrow=2,ncol = 2,byrow=TRUE)
heatmap(m,scale="column",main="My heatmap",Colv = NA,col="green")
t<-c(45,89,70,90)
m<-matrix(t,nrow=2,ncol = 2,byrow=TRUE)
heatmap(m,scale="row",main="My heatmap",Colv = NA,col="green")
t<-c(45,89,70,90)
m<-matrix(t,nrow=2,ncol = 2,byrow=TRUE)
heatmap(m,scale="row",main="My heatmap",Colv = NA,col="green")
t<-c(45,89,70,90)
plot(t)
t<-c(45,89,70,90)
b<-c(54,98,90,10)
plot(t)
abline(lm(t~b))
t<-c(45,89,70,90)
b<-c(1,2,3,4)
plot(t)
abline(lm(t~b))
library("class", lib.loc="C:/Program Files/R/R-3.5.0/library")
install.packages("corrplot")
install.packages("epi")
heatmap(as.matrix(mtcars),scale = "column",colv=NA,main="MY HEATMAP DEMO")
install.packages("devtools")
install.packages("xml2")
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
#mydata<-read.csv(file.choose(), header = TRUE)
mydata <- read.csv(file.choose(), header = TRUE)
docs <- Corpus(VectorSource(mydata$Chat.content))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
#View(stopwords("english"))
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("chat","system","https","stellamaris","eatuhaire","assistant","joseph","simon","www.visiongroup.co.ug","banyu","newvision.co.ug","closed","accepted","live","elizabeth","atuhaire","support","http","paul","josephbanyu","jbanyu","ochen","nabisere"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 20)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1, max.words=1000, random.order=FALSE, rot.per=0.35,colors=brewer.pal(8, "Dark2"))
#barplot(d[1:20,]$freq, las = 2, names.arg = d[1:20,]$word,col ="lightblue", main ="Most frequent words",ylab = "Word frequencies")
# general statistcs and counts
#stri_stats_general(docs)
findAssocs(dtm, terms = "get", corlimit = 0.5)
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
mydata <- read.csv(file.choose(), header = TRUE)
docs <- Corpus(VectorSource(mydata$Chat.content))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("chat","system","https","stellamaris","eatuhaire","assistant","joseph","simon","www.visiongroup.co.ug","banyu","newvision.co.ug","closed","accepted","live","elizabeth","atuhaire","support","http","paul","josephbanyu","jbanyu","ochen","nabisere"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 20)
set.seed(1234)
par(mfrows=c(2,2))
wordcloud(words = d$word, freq = d$freq, min.freq = 1, max.words=1000, random.order=FALSE, rot.per=0.35,colors=brewer.pal(8, "Dark2"))
hist(d$freq,main="Histogram showing frequency of words being used")
findAssocs(dtm, terms = "get", corlimit = 0.5)
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
mydata <- read.csv(file.choose(), header = TRUE)
docs <- Corpus(VectorSource(mydata$Chat.content))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("chat","system","https","stellamaris","eatuhaire","assistant","joseph","simon","www.visiongroup.co.ug","banyu","newvision.co.ug","closed","accepted","live","elizabeth","atuhaire","support","http","paul","josephbanyu","jbanyu","ochen","nabisere"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 20)
set.seed(1234)
par(mfrow=c(2,2))
wordcloud(words = d$word, freq = d$freq, min.freq = 1, max.words=1000, random.order=FALSE, rot.per=0.35,colors=brewer.pal(8, "Dark2"))
hist(d$freq,main="Histogram showing frequency of words being used")
findAssocs(dtm, terms = "get", corlimit = 0.5)
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
mydata <- read.csv(file.choose(), header = TRUE)
docs <- Corpus(VectorSource(mydata$Chat.content))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("chat","system","https","stellamaris","eatuhaire","assistant","joseph","simon","www.visiongroup.co.ug","banyu","newvision.co.ug","closed","accepted","live","elizabeth","atuhaire","support","http","paul","josephbanyu","jbanyu","ochen","nabisere"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 20)
set.seed(1234)
par(mfrow=c(2,2))
wordcloud(words = d$word, freq = d$freq, min.freq = 1, max.words=1000, random.order=FALSE, rot.per=0.35,colors=brewer.pal(8, "Dark2"))
hist(d$freq,main="Histogram showing frequency of words being used")
findAssocs(dtm, terms = "get", corlimit = 0.5)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
mydata <- read.csv(file.choose(), header = TRUE)
docs <- Corpus(VectorSource(mydata$Chat.content))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("chat","system","https","stellamaris","eatuhaire","assistant","joseph","simon","www.visiongroup.co.ug","banyu","newvision.co.ug","closed","accepted","live","elizabeth","atuhaire","support","http","paul","josephbanyu","jbanyu","ochen","nabisere"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 20)
set.seed(1234)
par(mfrow=c(2,2))
wordcloud(words = d$word, freq = d$freq, min.freq = 1, max.words=1000, random.order=FALSE, rot.per=0.35,colors=brewer.pal(8, "Dark2"))
hist(d$freq,main="Histogram showing frequency of words being used")
findAssocs(dtm, terms = "get", corlimit = 0.5)
#hist(d$freq,main="Histogram showing frequency of words being used")
findAssocs(dtm, terms = "get", corlimit = 0.5)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
mydata <- read.csv(file.choose(), header = TRUE)
docs <- Corpus(VectorSource(mydata$Chat.content))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, c("chat","system","https","stellamaris","eatuhaire","assistant","joseph","simon","www.visiongroup.co.ug","banyu","newvision.co.ug","closed","accepted","live","elizabeth","atuhaire","support","http","paul","josephbanyu","jbanyu","ochen","nabisere"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 20)
set.seed(1234)
#par(mfrow=c(2,2))
wordcloud(words = d$word, freq = d$freq, min.freq = 1, max.words=1000, random.order=FALSE, rot.per=0.35,colors=brewer.pal(8, "Dark2"))
#hist(d$freq,main="Histogram showing frequency of words being used")
findAssocs(dtm, terms = "get", corlimit = 0.5)
shiny::runApp('submitted/CODE')
install.packages("plotly")
runApp('submitted/CODE')
install.packages("plotrix")
runApp('submitted/CODE')
install.packages("wordcloud2")
runApp('submitted/CODE')
install.packages("syuzhet")
runApp('submitted/CODE')
install.packages("quanteda")
runApp('submitted/CODE')
install.packages("DT")
runApp('submitted/CODE')
runApp('submitted/CODE')
install.packages("shinyjs")
runApp('submitted/CODE')
runApp('submitted/CODE')
install.packages("googleVis")
runApp('submitted/CODE')
install.packages("scatterplot3d")
runApp('submitted/CODE')
